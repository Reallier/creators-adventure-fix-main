plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    forge {
        mixinConfig "creators-adventure-fix.mixins.json"
        mixinConfig "creators-adventure-fix-forge.mixins.json"
    }
    runs {
        client {
            vmArgs "-Dmixin.debug.export=true"
        }

    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}


dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-forge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')

    // 放入 TinyMobFarm 依赖项
    modImplementation "curse.maven:tiny-mob-farm-remastered-986607:${project.tiny_mob_farm_forge_curseforge_id}"
    modImplementation "curse.maven:supermartijn642s-config-lib-438332:${project.config_library_forge_curseforge_id}"
    modImplementation "curse.maven:ui-933200:${project.ui_library_file_forge_curseforge_id}"

    // 此处放入 embeddium 依赖项
    modImplementation("maven.modrinth:embeddium:${project.embeddium_forge_modrinth_version}")
    modImplementation("maven.modrinth:embeddiumplus:${project.embeddiumplus_forge_modrinth_version}")
    modImplementation("maven.modrinth:rubidium-extra:${project.rubidium_extra_forge_modrinth_version}")
    modImplementation("maven.modrinth:alexs-caves:${project.alexs_caves_forge_modrinth_version}")
    modImplementation("maven.modrinth:citadel:${project.citadel_forge_modrinth_version}")
    modImplementation("maven.modrinth:oculus:${project.oculus_forge_modrinth_version}")
    // 此处放入 Xray 依赖项
    modImplementation("curse.maven:xray-1-13-rift-modloader-301609:${project.xray_forge_curseforge_id}")
    // 此处放入 FTB Ultimine 依赖项
    modImplementation("curse.maven:ftb-ultimine-forge-386134:${project.ftbultimine_forge_curseforge_id}")
    modImplementation("curse.maven:ftb-library-forge-404465:${project.ftblibrary_forge_curseforge_id}")
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
